<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MTG Hand Simulator - Modern UI</title>

    <!-- Favicons -->
    <link rel="apple-touch-icon" sizes="180x180" href="/assets/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/assets/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/assets/favicon-16x16.png">
    <link rel="manifest" href="/assets/site.webmanifest">

    <!-- Stylesheets -->
    <link rel="stylesheet" type="text/css" href="/assets/modern-ui.css?v=22">

    <!-- Scripts -->
    <!-- REFACTORED VERSION - Using modular architecture -->
    <script type="module" src="./scripts/playhand-modern-refactored.mjs?v=33" defer></script>
    <!-- Original (backup): <script type="module" src="./scripts/playhand-modern.mjs?v=18" defer></script> -->
    <script>
        // Mobile targeting toggle function (Phase 1: Mobile-First Layout)
        function toggleMobileTargeting() {
            const targetingControls = document.getElementById('targetingControls');
            const toggleButton = document.getElementById('mobileTargetingToggle');

            if (targetingControls.classList.contains('expanded')) {
                targetingControls.classList.remove('expanded');
                toggleButton.textContent = 'üéØ Spell Targeting';
            } else {
                targetingControls.classList.add('expanded');
                toggleButton.textContent = '‚ùå Close Targeting';
            }
        }

        // Progressive Disclosure Functions (Phase 2)
        function setExpertiseLevel(level) {
            // Update active button
            document.querySelectorAll('.expertise-btn').forEach(btn => {
                btn.classList.remove('active');
                if (btn.getAttribute('data-level') === level) {
                    btn.classList.add('active');
                }
            });

            // Update targeting controls container
            const targetingControls = document.getElementById('targetingControls');
            if (targetingControls) {
                targetingControls.setAttribute('data-expertise', level);
            }

            // Store preference
            localStorage.setItem('mtg-expertise-level', level);

            // Show appropriate toast message
            const messages = {
                'beginner': 'Beginner mode: Essential spells only',
                'advanced': 'Advanced mode: Basic + Advanced spells',
                'expert': 'Expert mode: All spells available'
            };

            if (window.handSimulator && window.handSimulator.showToast) {
                window.handSimulator.showToast(messages[level], 'info');
            }
        }

        function toggleSection(sectionId) {
            const section = document.getElementById(sectionId);
            if (!section) return;

            const header = section.previousElementSibling;
            if (!header) return;

            const icon = header.querySelector('.toggle-icon');

            if (section.classList.contains('collapsed')) {
                section.classList.remove('collapsed');
                header.classList.remove('collapsed');
            } else {
                section.classList.add('collapsed');
                header.classList.add('collapsed');
            }
        }

        // Targeting Controls Toggle
        function toggleTargetingControls() {
            const targetingControls = document.getElementById('targetingControls');
            if (targetingControls) {
                targetingControls.classList.toggle('expanded');
            }
        }

        // Close dropdowns when clicking outside
        function closeAllDropdowns() {
            document.querySelectorAll('.dropdown-menu.show, .advanced-actions-panel.show').forEach(menu => {
                menu.classList.remove('show');
            });
            const tokenMenuContainer = document.getElementById('playerTokenMenuContainer');
            if (tokenMenuContainer) {
                tokenMenuContainer.style.display = 'none';
            }
        }

        // Show token menu positioned near the button
        function showTokenMenu(event) {
            const container = document.getElementById('playerTokenMenuContainer');
            if (!container) return;

            const button = event.target;
            const rect = button.getBoundingClientRect();

            container.style.display = 'block';
            container.style.left = rect.left + 'px';
            container.style.top = (rect.bottom + 4) + 'px';

            event.stopPropagation();
        }

        // Initialize progressive disclosure on page load
        document.addEventListener('DOMContentLoaded', function() {
            const savedLevel = localStorage.getItem('mtg-expertise-level') || 'beginner';
            setExpertiseLevel(savedLevel);

            // Make targeting header clickable
            const targetingHeader = document.querySelector('.targeting-header');
            if (targetingHeader) {
                targetingHeader.addEventListener('click', toggleTargetingControls);
            }

            // Close dropdowns when clicking outside
            document.addEventListener('click', function(event) {
                const isDropdownButton = event.target.closest('button[onclick*="classList.toggle"]');
                const isInsideDropdown = event.target.closest('.dropdown-menu, .advanced-actions-panel');

                if (!isDropdownButton && !isInsideDropdown) {
                    closeAllDropdowns();
                }
            });

            // Keyboard shortcuts
            document.addEventListener('keydown', function(event) {
                // Only activate if not typing in an input field
                if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') return;

                const key = event.key.toLowerCase();

                switch(key) {
                    case 'd':
                        window.handSimulator?.drawCard();
                        break;
                    case 'n':
                        window.handSimulator?.resetAndDraw7();
                        break;
                    case 'm':
                        window.handSimulator?.mulligan();
                        break;
                    case 'p':
                        window.handSimulator?.passTurn();
                        break;
                    case 'u':
                        window.handSimulator?.untapAll();
                        break;
                }
            });

            // Modal deck selectors are now pre-populated in HTML with all 65 decks
        });

        // Function to open deck selection modal and sync current decks
        function openDeckSelectionModal(event) {
            if (event) {
                event.preventDefault();
                event.stopPropagation();
            }
            const modal = document.getElementById('deckSelectionModal');
            if (modal) {
                modal.style.display = 'flex';

                // Add show class to modal-content for animation
                const modalContent = modal.querySelector('.modal-content');
                if (modalContent) {
                    setTimeout(() => modalContent.classList.add('show'), 10);
                }

                // Update current deck displays in modal from game state
                const playerDeckNameModal = document.getElementById('playerDeckNameModal');
                const opponentDeckNameModal = document.getElementById('opponentDeckNameModal');

                if (playerDeckNameModal && window.handSimulator?.currentDeck?.name) {
                    playerDeckNameModal.textContent = window.handSimulator.currentDeck.name;
                } else if (playerDeckNameModal) {
                    playerDeckNameModal.textContent = 'No Deck';
                }

                if (opponentDeckNameModal && window.handSimulator?.gameState?.opponent?.deckName) {
                    opponentDeckNameModal.textContent = window.handSimulator.gameState.opponent.deckName;
                } else if (opponentDeckNameModal) {
                    opponentDeckNameModal.textContent = 'No Deck';
                }
            }
        }
    </script>
</head>
<body>
    <div class="app-container">
        <%- include('partials/nav-modern', { activePage: 'playhand' }); -%>

        <!-- Compact Top Control Bar -->
        <div class="play-controls-bar" role="toolbar" aria-label="Game Controls">
            <!-- Main Game Actions -->
            <div class="controls-section">
                <div class="hand-controls" role="group" aria-label="Hand Actions" style="display: flex; gap: 8px; align-items: center;">
                    <button class="btn btn-primary-action" onclick="openDeckSelectionModal(event)" title="Select decks">
                        üé¥ Decks
                    </button>
                    <button class="btn btn-primary-action" onclick="window.handSimulator?.quickTwoPlayerSetup()" title="Quick setup">
                        ‚ö° Setup
                    </button>
                    <button id="endTurnButton" class="btn btn-secondary-action">
                        ‚è≠Ô∏è End Turn
                    </button>
                    <button id="combatButton" class="btn btn-danger" onclick="window.handSimulator?.initializeCombat()" title="Start combat phase">
                        ‚öîÔ∏è Combat
                    </button>

                    <!-- Dropdown menu for less-used actions -->
                    <div class="dropdown" style="position: relative; display: inline-block;">
                        <button class="btn btn-tertiary-action" onclick="this.nextElementSibling.classList.toggle('show')" style="padding: 6px 12px;">
                            ‚ãØ
                        </button>
                        <div class="dropdown-menu" style="display: none; position: absolute; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 4px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 1000; min-width: 150px; top: 100%; left: 0; margin-top: 4px;">
                            <button class="dropdown-item" onclick="window.handSimulator?.startTwoPlayerGame(); this.parentElement.classList.remove('show')" style="width: 100%; text-align: left; padding: 8px 12px; border: none; background: none; cursor: pointer; display: block; color: var(--text-primary);" onmouseover="this.style.background='var(--bg-secondary)'" onmouseout="this.style.background='none'">
                                üéÆ Start Game
                            </button>
                            <button class="dropdown-item" id="testCountersButton" onclick="this.parentElement.classList.remove('show')" style="width: 100%; text-align: left; padding: 8px 12px; border: none; background: none; cursor: pointer; display: block; color: var(--text-primary);" onmouseover="this.style.background='var(--bg-secondary)'" onmouseout="this.style.background='none'">
                                üß™ Test Counters
                            </button>
                            <button class="dropdown-item" id="soundToggle" onclick="window.handSimulator?.toggleSounds(); this.parentElement.classList.remove('show')" style="width: 100%; text-align: left; padding: 8px 12px; border: none; background: none; cursor: pointer; display: block; color: var(--text-primary);" onmouseover="this.style.background='var(--bg-secondary)'" onmouseout="this.style.background='none'">
                                üîä Toggle Sound
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Turn Indicator (centered) -->
            <div class="controls-section" style="flex: 1; display: flex; justify-content: center;">
                <div id="turnIndicator" class="turn-indicator">
                    <div class="turn-info">
                        <span class="turn-player">Your Turn</span>
                        <span class="turn-number">Turn 1</span>
                        <span class="turn-phase">Main Phase 1</span>
                    </div>
                </div>
            </div>

            <!-- Board Wipes (right side, collapsible) -->
            <div class="controls-section">
                <button id="boardWipesToggleBtn" class="btn btn-secondary-action" onclick="document.getElementById('boardWipesPanel').classList.toggle('show')" style="position: relative;">
                    üí• Board Wipes
                </button>
                <div id="boardWipesPanel" class="dropdown-menu" style="position: absolute; right: 10px; background: var(--bg-primary); border: 1px solid var(--border-color); border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 1000; padding: 12px; min-width: 300px; margin-top: 4px;">
                    <div style="font-size: 0.875rem; color: var(--text-secondary); margin-bottom: 8px; font-weight: 600;">üí• Board Wipes</div>
                    <div style="display: flex; flex-wrap: wrap; gap: 6px;">
                        <button class="btn btn-xs btn-outline-danger" onclick="window.handSimulator?.wrathOfGod()" title="Destroy all creatures">üíÄ Wrath</button>
                        <button class="btn btn-xs btn-outline-danger" onclick="window.handSimulator?.damnation()" title="Destroy all creatures">üåë Damn</button>
                        <button class="btn btn-xs btn-outline-danger" onclick="window.handSimulator?.supremeVerdict()" title="Can't be countered">‚öñÔ∏è Verdict</button>
                        <button class="btn btn-xs btn-outline-warning" onclick="window.handSimulator?.pyroclasm()" title="2 damage to all">üî• Pyro</button>
                        <button class="btn btn-xs btn-outline-warning" onclick="window.handSimulator?.angerOfTheGods()" title="3 damage, exile">üò° Anger</button>
                        <button class="btn btn-xs btn-outline-primary" onclick="window.handSimulator?.cyclonicRift()" title="Bounce all opponent">üåä Rift</button>
                        <button class="btn btn-xs btn-outline-secondary" onclick="window.handSimulator?.armageddon()" title="Destroy all lands">üí• Geddon</button>
                    </div>
                    <div style="font-size: 0.75rem; color: var(--text-muted); margin-top: 8px; padding-top: 8px; border-top: 1px solid var(--border-color);">
                        üí° Right-click cards for targeted removal
                    </div>
                </div>

                <!-- Delayed Triggers Indicator -->
                <div id="delayedTriggersIndicator" style="display: none; padding: 6px 10px; background: rgba(245, 158, 11, 0.1); border-left: 3px solid #f59e0b; border-radius: 4px; font-size: 12px; cursor: pointer; margin-left: 8px;">
                </div>
            </div>
        </div>

        <!-- Combat Panel (appears during combat) -->
        <div id="combatPanel" style="display: none; position: fixed; top: 180px; left: 50%; transform: translateX(-50%); z-index: 100; min-width: 400px; max-width: 600px;">
        </div>

        <!-- Sidebar (Simplified) -->
        <aside class="app-sidebar">
            <div id="gameLogContainer" style="height: 100%; display: flex; flex-direction: column;">
                <h3 style="padding: 12px; margin: 0; border-bottom: 1px solid var(--border-color); font-size: 14px; font-weight: 600;">üìú Game Log</h3>
                <div id="gameLogPanel" style="flex: 1; overflow-y: auto; padding: 12px; font-size: 12px;"></div>
            </div>        </aside>

        <!-- Main Content -->
        <main class="app-main">
            <!-- Loading State -->
            <div id="loadingState" class="card loading" style="display: none;">
                <div class="card-body text-center">
                    <div class="spinner mb-2"></div>
                    <div>Loading deck...</div>
                </div>
            </div>

            <!-- Empty State -->
            <div id="emptyState" class="card" style="display: none;">
                <div class="card-body text-center">
                    <div class="text-muted mb-4">
                        <span style="font-size: 3rem;">üéÆ</span>
                    </div>
                    <h2 class="mb-2">MTG Hand Simulator</h2>
                    <p class="text-muted mb-4">
                        Select a deck to start simulating, or use <strong>Quick Setup</strong> above for instant two-player testing.
                    </p>
                    <div class="d-flex gap-4 justify-content-center">
                        <button onclick="document.querySelector('.deck-search-input')?.focus()"
                                class="btn btn-primary">
                            Choose Pre-defined Deck
                        </button>
                        <button onclick="document.getElementById('loadXMLFileButton').click()"
                                class="btn btn-secondary">
                            Upload Deck File
                        </button>
                    </div>
                </div>
            </div>

            <!-- Game Content -->
            <div id="gameContent" style="display: block;">
                <!-- Two-Player Layout for Wide Screens -->
                <div class="two-player-layout" style="display: grid;">
                    <!-- Opponent Area (Left Side) -->
                    <!-- Opponent Area - Matching Accessible Design -->
                    <div class="player-area" id="opponentArea">
                        <div class="player-header" style="padding: var(--space-3); background: var(--bg-secondary); color: var(--text-primary); border: 1px solid var(--border-color);">
                            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: var(--space-3);">
                                <div style="display: flex; align-items: center; gap: var(--space-3);">
                                    <!-- Clear avatar badge -->
                                    <div style="background: var(--danger); padding: 10px; border-radius: 50%; display: flex; align-items: center; justify-content: center; width: 48px; height: 48px;">
                                        <span style="font-size: 1.5rem;">üë§</span>
                                    </div>
                                    <div>
                                        <div style="font-weight: 600; font-size: 0.95rem; margin-bottom: 4px;">Player 2</div>
                                        <div style="font-size: 0.85rem; color: var(--text-secondary);">
                                            <span id="opponentHandCount2">0 cards</span> ‚Ä¢ <span id="opponentMulliganCount2">0 mulligans</span>
                                        </div>
                                        <button class="btn btn-link" onclick="openDeckSelectionModal(event)" style="padding: 0; font-size: 0.85rem; text-decoration: underline; text-align: left; color: var(--primary); margin-top: 2px;" title="Click to change deck"><span id="opponentDeckName2">No Deck</span></button>
                                    </div>
                                </div>

                                <!-- Large, Clear Life Counter -->
                                <div style="display: flex; flex-direction: column; align-items: center; gap: 6px;">
                                    <div style="font-size: 0.75rem; color: var(--text-secondary); font-weight: 600; text-transform: uppercase; letter-spacing: 0.5px;">Life</div>
                                    <div style="display: flex; align-items: center; gap: 6px;">
                                        <button onclick="window.handSimulator.changeOpponentLife(-1)" style="cursor: pointer; min-width: 44px; min-height: 44px; padding: 8px 12px; background: #dc3545; border: none; border-radius: 6px; font-weight: bold; font-size: 1.25rem; color: white; user-select: none; transition: all 0.2s; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" onmouseenter="this.style.background='#c82333'" onmouseleave="this.style.background='#dc3545'" title="Opponent loses 1 life">‚àí1</button>
                                        <div id="opponentLife2" style="font-size: 2.5rem; font-weight: bold; min-width: 70px; text-align: center; cursor: pointer; padding: 8px 12px; border-radius: 6px; background: var(--bg-secondary); color: var(--text-primary); border: 2px solid var(--border-color);" onclick="const newLife = prompt('Set opponent life:', this.textContent); if(newLife !== null) window.handSimulator.setOpponentLife(parseInt(newLife));" title="Click to set exact life total">20</div>
                                        <button onclick="window.handSimulator.changeOpponentLife(1)" style="cursor: pointer; min-width: 44px; min-height: 44px; padding: 8px 12px; background: #28a745; border: none; border-radius: 6px; font-weight: bold; font-size: 1.25rem; color: white; user-select: none; transition: all 0.2s; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" onmouseenter="this.style.background='#218838'" onmouseleave="this.style.background='#28a745'" title="Opponent gains 1 life">+1</button>
                                    </div>
                                    <!-- Quick Life Presets -->
                                    <div style="display: flex; gap: 4px; margin-top: 4px;">
                                        <button onclick="window.handSimulator.changeOpponentLife(-3)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #6c757d; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#5a6268'" onmouseleave="this.style.background='#6c757d'" title="Lightning Bolt damage">‚àí3</button>
                                        <button onclick="window.handSimulator.changeOpponentLife(-2)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #6c757d; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#5a6268'" onmouseleave="this.style.background='#6c757d'" title="Lose 2 life">‚àí2</button>
                                        <button onclick="window.handSimulator.changeOpponentLife(3)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #17a2b8; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#138496'" onmouseleave="this.style.background='#17a2b8'" title="Gain 3 life">+3</button>
                                    </div>
                                </div>
                            </div>

                            <!-- Primary Actions - Matching Player Layout -->
                            <div style="display: flex; gap: 8px; flex-wrap: wrap; align-items: center;">
                                <!-- Core Actions Group -->
                                <div style="display: flex; gap: 6px;">
                                    <button class="btn btn-sm btn-success" onclick="window.handSimulator.resetAndDrawOpponent7()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Shuffle deck, reset life to 20, draw 7 cards">
                                        üé≤ New Game
                                    </button>
                                    <button class="btn btn-sm btn-primary" onclick="window.handSimulator.drawOpponentCard()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;">
                                        üì• Draw
                                    </button>
                                    <button class="btn btn-sm btn-warning" onclick="window.handSimulator.mulliganOpponent()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;">
                                        üîÑ Mulligan
                                    </button>
                                    <button class="btn btn-sm btn-outline-info" onclick="window.handSimulator.passTurn()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;">
                                        ‚è≠Ô∏è Pass Turn
                                    </button>
                                </div>

                                <!-- Divider -->
                                <div style="width: 1px; height: 28px; background: var(--border-color);"></div>

                                <!-- Quick Actions Group -->
                                <div style="display: flex; gap: 6px;">
                                    <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.untapAllOpponent()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Untap all opponent's permanents">
                                        ‚ü≥ Untap All
                                    </button>
                                </div>

                                <!-- Divider -->
                                <div style="width: 1px; height: 28px; background: var(--border-color);"></div>

                                <!-- Library Button with Actions Menu for Opponent -->
                                <div style="position: relative;">
                                    <button id="opponentLibraryButton" class="btn btn-sm btn-outline-info" onclick="document.getElementById('topOpponentLibraryActionsMenu').classList.toggle('show')" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;">
                                        üìö Library (<span id="opponentLibraryButtonCount">0</span>)
                                    </button>
                                    <div id="topOpponentLibraryActionsMenu" class="advanced-actions-panel" style="position: absolute; top: 100%; left: 0; margin-top: 4px; padding: 8px; min-width: 180px; z-index: 100; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.showLibraryModal('opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üëÅÔ∏è View Library</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.showScryInterface(1, 'Scry', {player: 'opponent'}); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üîç Scry 1</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.ponder('opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">ü§î Ponder</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.brainstorm('opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üß† Brainstorm</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.surveil(1, 'opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üïµÔ∏è Surveil 1</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.surveil(2, 'opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üïµÔ∏è Surveil 2</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.triggerManualCascade('opponent'); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">‚ö° Cascade</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.shuffleOpponentLibrary(); document.getElementById('topOpponentLibraryActionsMenu').classList.remove('show');" style="width: 100%; text-align: left; padding: 8px;">üîÄ Shuffle</button>
                                    </div>
                                </div>

                                <!-- Create Token Button for Opponent -->
                                <div style="position: relative;">
                                    <button class="btn btn-sm btn-success" onclick="document.getElementById('opponentTokenMenu').classList.toggle('show')" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;">
                                        ü™ô Create Token
                                    </button>
                                    <div id="opponentTokenMenu" class="advanced-actions-panel" style="position: absolute; top: 100%; left: 0; margin-top: 4px; padding: 12px; min-width: 280px; max-height: 400px; overflow-y: auto; z-index: 100; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <!-- Artifact Tokens -->
                                        <div style="margin-bottom: 12px;">
                                            <div style="font-weight: 600; font-size: 0.75rem; color: var(--text-secondary); margin-bottom: 6px; text-transform: uppercase;">Artifact Tokens</div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 4px;">
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Treasure', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üíé Treasure</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Clue', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üîç Clue</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Blood', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">ü©∏ Blood</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Food', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üçé Food</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Map', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üó∫Ô∏è Map</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Powerstone', 'Artifact', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üí† Powerstone</button>
                                            </div>
                                        </div>
                                        <!-- Creature Tokens -->
                                        <div>
                                            <div style="font-weight: 600; font-size: 0.75rem; color: var(--text-secondary); margin-bottom: 6px; text-transform: uppercase;">Creature Tokens</div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 4px;">
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Soldier', 'Creature ‚Äî Soldier', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">‚öîÔ∏è 1/1 Soldier</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('2/2 Zombie', 'Creature ‚Äî Zombie', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üßü 2/2 Zombie</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Goblin', 'Creature ‚Äî Goblin', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëπ 1/1 Goblin</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Elf', 'Creature ‚Äî Elf', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üßù 1/1 Elf</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('3/3 Beast', 'Creature ‚Äî Beast', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêª 3/3 Beast</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('4/4 Angel', 'Creature ‚Äî Angel', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëº 4/4 Angel</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('5/5 Dragon', 'Creature ‚Äî Dragon', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêâ 5/5 Dragon</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Spirit', 'Creature ‚Äî Spirit', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëª 1/1 Spirit</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('2/2 Knight', 'Creature ‚Äî Knight', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üõ°Ô∏è 2/2 Knight</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Insect', 'Creature ‚Äî Insect', 'opponent'); document.getElementById('opponentTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêõ 1/1 Insect</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Advanced Actions Dropdown -->
                                <div style="position: relative;">
                                    <button class="btn btn-sm btn-outline-success" onclick="document.getElementById('opponentAdvancedMenu').classList.toggle('show')" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem; display: flex; align-items: center; gap: 4px;">
                                        <span>‚ö° Advanced</span>
                                        <span style="font-size: 0.7rem;">‚ñº</span>
                                    </button>
                                    <div id="opponentAdvancedMenu" class="advanced-actions-panel" style="position: absolute; top: 100%; left: 0; margin-top: 4px; padding: 8px; min-width: 200px; z-index: 100; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <button class="btn btn-sm btn-outline-success w-100 mb-2 text-left" onclick="window.handSimulator.evolvingWilds('opponent'); document.getElementById('opponentAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üåç Fetch Land</button>
                                        <button class="btn btn-sm btn-outline-success w-100 mb-2 text-left" onclick="window.handSimulator.cultivate('opponent'); document.getElementById('opponentAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üå± Ramp</button>
                                        <button class="btn btn-sm btn-outline-success w-100 text-left" onclick="window.handSimulator.triggerManualCascade('opponent'); document.getElementById('opponentAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">‚ö° Cascade</button>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="player-zones">
                            <div class="hand-area">
                                <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 4px;">
                                    <span style="font-weight: 600; font-size: 1rem;">üÉè Hand</span>
                                    <div style="display: flex; gap: 6px;">
                                        <div class="dropdown">
                                            <button id="sortOpponentHandButton" class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;">
                                                üîÑ Lands First
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" href="#" data-sort-mode="hands-first" data-player="opponent">‚ö° Spells First</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="lands-first" data-player="opponent">üåç Lands First (default)</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="cmc" data-player="opponent">üíé By Mana Value</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="type" data-player="opponent">üìã By Card Type</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="name" data-player="opponent">üî§ Alphabetical</a></li>
                                            </ul>
                                        </div>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator?.executeDiscard('opponent', 1, 'random')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Discard 1 random card">üíÄ Discard 1</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator?.executeDiscard('opponent', 2, 'random')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Discard 2 random cards">üíÄ Discard 2</button>
                                    </div>
                                </div>
                                <div id="opponentHandContainer2" class="zone-content"></div>
                            </div>
                            <div class="battlefield-area">
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">üèîÔ∏è Lands</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-success" onclick="window.handSimulator.evolvingWilds('opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Fetch basic land">üåç Fetch Land</button>
                                            <button class="btn btn-sm btn-outline-success" onclick="window.handSimulator.cultivate('opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Cultivate - ramp spell">üå± Ramp</button>
                                        </div>
                                    </div>
                                    <div id="opponentBattlefieldLands2" class="zone-content"></div>
                                </div>
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">‚öîÔ∏è Creatures</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('1/1 Soldier', 'Creature ‚Äî Soldier', 'opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create 1/1 Soldier token">‚öîÔ∏è 1/1 Token</button>
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('2/2 Zombie', 'Creature ‚Äî Zombie', 'opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create 2/2 Zombie token">üßü 2/2 Token</button>
                                        </div>
                                    </div>
                                    <div id="opponentBattlefieldCreatures2" class="zone-content"></div>
                                </div>
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">‚ú® Artifacts & Enchantments</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Treasure', 'Artifact', 'opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create Treasure token">üíé Treasure</button>
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Clue', 'Artifact', 'opponent')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create Clue token">üîç Clue</button>
                                        </div>
                                    </div>
                                    <div id="opponentBattlefieldOthers2" class="zone-content"></div>
                                </div>
                            </div>
                            <div class="graveyard-exile-area" style="display: flex; gap: 4px; margin-top: 8px;">
                                <button class="zone-counter btn btn-sm btn-outline-secondary" onclick="window.handSimulator.showOpponentGraveyardModal()" style="min-height: 44px; font-size: 0.9rem; display: flex; flex-direction: column; align-items: center; padding: 6px; flex: 1;" title="View graveyard">
                                    <span style="font-size: 1.1rem;">ü™¶</span>
                                    <span style="font-weight: 600;">Graveyard</span>
                                    <span style="font-size: 0.85rem; color: var(--text-secondary);"><span id="opponentGraveyardCount2">0</span> cards</span>
                                </button>
                                <button class="zone-counter btn btn-sm btn-outline-secondary" onclick="window.handSimulator.showOpponentExileModal()" style="min-height: 44px; font-size: 0.9rem; display: flex; flex-direction: column; align-items: center; padding: 6px; flex: 1;" title="View exile zone">
                                    <span style="font-size: 1.1rem;">üö´</span>
                                    <span style="font-weight: 600;">Exile</span>
                                    <span style="font-size: 0.85rem; color: var(--text-secondary);"><span id="opponentExileCount2">0</span> cards</span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Player Area (Right Side) - Accessible All-Ages Design -->
                    <div class="player-area active" id="playerArea">
                        <!-- Clear Header with Large Touch Targets -->
                        <div class="player-header" style="padding: var(--space-3); background: var(--bg-secondary); color: var(--text-primary); border: 1px solid var(--border-color);">
                            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: var(--space-3);">
                                <div style="display: flex; align-items: center; gap: var(--space-3);">
                                    <!-- Clear avatar badge -->
                                    <div style="background: var(--primary-light); padding: 10px; border-radius: 50%; display: flex; align-items: center; justify-content: center; width: 48px; height: 48px;">
                                        <span style="font-size: 1.5rem;">üßô‚Äç‚ôÇÔ∏è</span>
                                    </div>
                                    <div>
                                        <div style="font-weight: 600; font-size: 0.95rem; margin-bottom: 4px;">Player 1</div>
                                        <div style="font-size: 0.85rem; color: var(--text-secondary);">
                                            <span id="handCount2">0 cards</span> ‚Ä¢ <span id="mulliganCount2">0 mulligans</span>
                                        </div>
                                        <button class="btn btn-link" onclick="openDeckSelectionModal(event)" style="padding: 0; font-size: 0.85rem; text-decoration: underline; text-align: left; color: var(--primary); margin-top: 2px;" title="Click to change deck"><span id="playerDeckName2">No Deck</span></button>
                                    </div>
                                </div>

                                <!-- Large, Clear Life Counter -->
                                <div style="display: flex; flex-direction: column; align-items: center; gap: 6px;">
                                    <div style="font-size: 0.75rem; color: var(--text-secondary); font-weight: 600; text-transform: uppercase; letter-spacing: 0.5px;">Life</div>
                                    <div style="display: flex; align-items: center; gap: 6px;">
                                        <button onclick="window.handSimulator.changeLife(-1)" style="cursor: pointer; min-width: 44px; min-height: 44px; padding: 8px 12px; background: #dc3545; border: none; border-radius: 6px; font-weight: bold; font-size: 1.25rem; color: white; user-select: none; transition: all 0.2s; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" onmouseenter="this.style.background='#c82333'" onmouseleave="this.style.background='#dc3545'" title="Lose 1 life">‚àí1</button>
                                        <div id="lifeTotal2" style="font-size: 2.5rem; font-weight: bold; min-width: 70px; text-align: center; cursor: pointer; padding: 8px 12px; border-radius: 6px; background: var(--bg-secondary); color: var(--text-primary); border: 2px solid var(--border-color);" onclick="const newLife = prompt('Set life total:', this.textContent); if(newLife !== null) window.handSimulator.setLife(parseInt(newLife));" title="Click to set exact life total">20</div>
                                        <button onclick="window.handSimulator.changeLife(1)" style="cursor: pointer; min-width: 44px; min-height: 44px; padding: 8px 12px; background: #28a745; border: none; border-radius: 6px; font-weight: bold; font-size: 1.25rem; color: white; user-select: none; transition: all 0.2s; box-shadow: 0 2px 4px rgba(0,0,0,0.1);" onmouseenter="this.style.background='#218838'" onmouseleave="this.style.background='#28a745'" title="Gain 1 life">+1</button>
                                    </div>
                                    <!-- Quick Life Presets -->
                                    <div style="display: flex; gap: 4px; margin-top: 4px;">
                                        <button onclick="window.handSimulator.changeLife(-3)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #6c757d; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#5a6268'" onmouseleave="this.style.background='#6c757d'" title="Lightning Bolt damage">‚àí3</button>
                                        <button onclick="window.handSimulator.changeLife(-2)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #6c757d; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#5a6268'" onmouseleave="this.style.background='#6c757d'" title="Lose 2 life">‚àí2</button>
                                        <button onclick="window.handSimulator.changeLife(3)" style="cursor: pointer; min-width: 38px; min-height: 28px; padding: 4px 8px; background: #17a2b8; border: none; border-radius: 4px; font-weight: 600; font-size: 0.8rem; color: white; user-select: none; transition: all 0.2s;" onmouseenter="this.style.background='#138496'" onmouseleave="this.style.background='#17a2b8'" title="Gain 3 life">+3</button>
                                    </div>
                                </div>
                            </div>

                            <!-- Primary Actions - Larger, Clearer Labels -->
                            <div style="display: flex; gap: 8px; flex-wrap: wrap; align-items: center;">
                                <!-- Core Actions Group -->
                                <div style="display: flex; gap: 6px;">
                                    <button class="btn btn-sm btn-success" onclick="window.handSimulator.resetAndDraw7()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Shuffle deck, reset life to 20, draw 7 cards (Keyboard: N)">
                                        üé≤ New Game
                                    </button>
                                    <button class="btn btn-sm btn-primary" onclick="window.handSimulator.drawCard()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Keyboard: D">
                                        üì• Draw
                                    </button>
                                    <button class="btn btn-sm btn-warning" onclick="window.handSimulator.mulligan()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Keyboard: M">
                                        üîÑ Mulligan
                                    </button>
                                    <button class="btn btn-sm btn-outline-info" onclick="window.handSimulator.passTurn()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Keyboard: P">
                                        ‚è≠Ô∏è Pass Turn
                                    </button>
                                </div>

                                <!-- Divider -->
                                <div style="width: 1px; height: 28px; background: var(--border-color);"></div>

                                <!-- Quick Actions Group -->
                                <div style="display: flex; gap: 6px;">
                                    <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.untapAll()" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem;" title="Untap all your permanents (Keyboard: U)">
                                        ‚ü≥ Untap All
                                    </button>
                                </div>

                                <!-- Divider -->
                                <div style="width: 1px; height: 28px; background: var(--border-color);"></div>

                                <!-- Library Dropdown -->
                                <div style="position: relative;">
                                    <button id="playerLibraryButton" class="btn btn-sm btn-outline-info" onclick="document.getElementById('topLibraryActionsMenu').classList.toggle('show')" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem; display: flex; align-items: center; gap: 4px;">
                                        <span>üìö Library (<span id="playerLibraryButtonCount">0</span>)</span>
                                        <span style="font-size: 0.7rem;">‚ñº</span>
                                    </button>
                                    <div id="topLibraryActionsMenu" class="advanced-actions-panel" style="position: absolute; top: 100%; left: 0; margin-top: 4px; padding: 8px; min-width: 180px; z-index: 100; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.showLibraryModal('player'); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üëÅÔ∏è View Library</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.viewTopCard(); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üîù View Top Card</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.showScryInterface(1, 'Scry'); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üîç Scry 1</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.ponder(); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">ü§î Ponder</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.brainstorm(); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üß† Brainstorm</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.surveil(1); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üïµÔ∏è Surveil 1</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.surveil(2); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üïµÔ∏è Surveil 2</button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.triggerManualCascade('player'); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">‚ö° Cascade</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.viewTopCards(3); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">üëÄ View Top 3</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.millCards(2); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; margin-bottom: 4px; text-align: left; padding: 8px;">‚ö∞Ô∏è Mill 2</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.shuffleLibrary(); document.getElementById('topLibraryActionsMenu').classList.remove('show');" style="width: 100%; text-align: left; padding: 8px;">üîÄ Shuffle</button>
                                    </div>
                                </div>

                                <!-- Advanced Actions Dropdown -->
                                <div style="position: relative;">
                                    <button class="btn btn-sm btn-outline-success" onclick="document.getElementById('playerAdvancedMenu').classList.toggle('show')" style="min-height: 36px; padding: 6px 12px; font-size: 0.9rem; display: flex; align-items: center; gap: 4px;">
                                        <span>‚ö° Advanced</span>
                                        <span style="font-size: 0.7rem;">‚ñº</span>
                                    </button>
                                    <div id="playerAdvancedMenu" class="advanced-actions-panel" style="position: absolute; top: 100%; left: 0; margin-top: 4px; padding: 8px; min-width: 200px; z-index: 100; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <button class="btn btn-sm btn-outline-success w-100 mb-2 text-left" onclick="showTokenMenu(event); document.getElementById('playerAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">ü™ô Create Token</button>
                                        <button class="btn btn-sm btn-outline-success w-100 mb-2 text-left" onclick="window.handSimulator.evolvingWilds(); document.getElementById('playerAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üåç Fetch Land</button>
                                        <button class="btn btn-sm btn-outline-success w-100 mb-2 text-left" onclick="window.handSimulator.cultivate(); document.getElementById('playerAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üå± Ramp</button>
                                        <button class="btn btn-sm btn-outline-success w-100 text-left" onclick="window.handSimulator.triggerManualCascade('player'); document.getElementById('playerAdvancedMenu').classList.remove('show');" style="padding: 8px; text-align: left;">‚ö° Cascade</button>
                                    </div>
                                </div>

                                <!-- Token Submenu (nested) -->
                                <div id="playerTokenMenuContainer" style="position: fixed; z-index: 101; display: none;">
                                    <div id="playerTokenMenu" class="advanced-actions-panel" style="padding: 12px; min-width: 280px; max-height: 400px; overflow-y: auto; box-shadow: 0 4px 12px rgba(0,0,0,0.2);">
                                        <!-- Artifact Tokens -->
                                        <div style="margin-bottom: 12px;">
                                            <div style="font-weight: 600; font-size: 0.75rem; color: var(--text-secondary); margin-bottom: 6px; text-transform: uppercase;">Artifact Tokens</div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 4px;">
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Treasure', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üíé Treasure</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Clue', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üîç Clue</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Blood', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">ü©∏ Blood</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Food', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üçé Food</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Map', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üó∫Ô∏è Map</button>
                                                <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Powerstone', 'Artifact', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üí† Powerstone</button>
                                            </div>
                                        </div>
                                        <!-- Creature Tokens -->
                                        <div>
                                            <div style="font-weight: 600; font-size: 0.75rem; color: var(--text-secondary); margin-bottom: 6px; text-transform: uppercase;">Creature Tokens</div>
                                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 4px;">
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Soldier', 'Creature ‚Äî Soldier', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">‚öîÔ∏è 1/1 Soldier</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('2/2 Zombie', 'Creature ‚Äî Zombie', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üßü 2/2 Zombie</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Goblin', 'Creature ‚Äî Goblin', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëπ 1/1 Goblin</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Elf', 'Creature ‚Äî Elf', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üßù 1/1 Elf</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('3/3 Beast', 'Creature ‚Äî Beast', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêª 3/3 Beast</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('4/4 Angel', 'Creature ‚Äî Angel', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëº 4/4 Angel</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('5/5 Dragon', 'Creature ‚Äî Dragon', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêâ 5/5 Dragon</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Spirit', 'Creature ‚Äî Spirit', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üëª 1/1 Spirit</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('2/2 Knight', 'Creature ‚Äî Knight', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üõ°Ô∏è 2/2 Knight</button>
                                                <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator.createToken('1/1 Insect', 'Creature ‚Äî Insect', 'player'); document.getElementById('playerTokenMenu').classList.remove('show');" style="padding: 8px; text-align: left;">üêõ 1/1 Insect</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <!-- Zone-Centric Design: Each zone has contextual actions -->
                        <div class="player-zones">
                            <!-- Hand Zone with Clear Actions -->
                            <div class="hand-area">
                                <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 4px;">
                                    <span style="font-weight: 600; font-size: 1rem;">üÉè Hand</span>
                                    <div style="display: flex; gap: 6px;">
                                        <div class="dropdown">
                                            <button id="sortHandButton" class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;">
                                                üîÑ Lands First
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item" href="#" data-sort-mode="hands-first">‚ö° Spells First</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="lands-first">üåç Lands First (default)</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="cmc">üíé By Mana Value</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="type">üìã By Card Type</a></li>
                                                <li><a class="dropdown-item" href="#" data-sort-mode="name">üî§ Alphabetical</a></li>
                                            </ul>
                                        </div>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator?.executeDiscard('player', 1, 'random')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Discard 1 random card">üíÄ Discard 1</button>
                                        <button class="btn btn-sm btn-outline-secondary" onclick="window.handSimulator?.executeDiscard('player', 2, 'random')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Discard 2 random cards">üíÄ Discard 2</button>
                                    </div>
                                </div>
                                <div id="handContainer2" class="zone-content"></div>
                            </div>
                            <!-- Battlefield Zones with Clear Titles -->
                            <div class="battlefield-area">
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">üèîÔ∏è Lands</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-success" onclick="window.handSimulator.evolvingWilds()" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Fetch basic land">üåç Fetch Land</button>
                                            <button class="btn btn-sm btn-outline-success" onclick="window.handSimulator.cultivate()" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Cultivate - ramp spell">üå± Ramp</button>
                                        </div>
                                    </div>
                                    <div id="battlefieldLands2" class="zone-content"></div>
                                </div>
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">‚öîÔ∏è Creatures</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('1/1 Soldier', 'Creature ‚Äî Soldier', 'player')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create 1/1 Soldier token">‚öîÔ∏è 1/1 Token</button>
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('2/2 Zombie', 'Creature ‚Äî Zombie', 'player')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create 2/2 Zombie token">üßü 2/2 Token</button>
                                        </div>
                                    </div>
                                    <div id="battlefieldCreatures2" class="zone-content"></div>
                                </div>
                                <div class="zone-section">
                                    <div class="zone-title" style="display: flex; justify-content: space-between; align-items: center; padding: 8px 12px; background: var(--bg-secondary); border-radius: 6px; margin-bottom: 8px;">
                                        <span style="font-weight: 600; font-size: 1rem;">‚ú® Artifacts & Enchantments</span>
                                        <div style="display: flex; gap: 6px;">
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Treasure', 'Artifact', 'player')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create Treasure token">üíé Treasure</button>
                                            <button class="btn btn-sm btn-outline-primary" onclick="window.handSimulator.createToken('Clue', 'Artifact', 'player')" style="min-height: 32px; padding: 4px 10px; font-size: 0.85rem;" title="Create Clue token">üîç Clue</button>
                                        </div>
                                    </div>
                                    <div id="battlefieldOthers2" class="zone-content"></div>
                                </div>
                            </div>

                            <!-- Clear Zone Counters with Full Names -->
                            <div class="graveyard-exile-area" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 8px; margin-top: 12px;">
                                <div style="position: relative;">
                                    <button class="zone-counter btn btn-sm btn-outline-secondary" onclick="window.handSimulator.showGraveyardModal()" onmouseenter="window.handSimulator.showZonePreview('graveyard', event)" onmouseleave="window.handSimulator.hideZonePreview()" style="min-height: 44px; font-size: 0.9rem; display: flex; flex-direction: column; align-items: center; padding: 6px;" title="View graveyard">
                                        <span style="font-size: 1.1rem;">ü™¶</span>
                                        <span style="font-weight: 600;">Graveyard</span>
                                        <span style="font-size: 0.85rem; color: var(--text-secondary);"><span id="graveyardCount2">0</span> cards</span>
                                    </button>
                                    <div id="graveyardPreview" class="zone-preview" style="display: none;"></div>
                                </div>

                                <div style="position: relative;">
                                    <button class="zone-counter btn btn-sm btn-outline-secondary" onclick="window.handSimulator.showExileModal()" onmouseenter="window.handSimulator.showZonePreview('exile', event)" onmouseleave="window.handSimulator.hideZonePreview()" style="min-height: 44px; font-size: 0.9rem; display: flex; flex-direction: column; align-items: center; padding: 6px;" title="View exile zone">
                                        <span style="font-size: 1.1rem;">üö´</span>
                                        <span style="font-weight: 600;">Exile</span>
                                        <span style="font-size: 0.85rem; color: var(--text-secondary);"><span id="exileCount2">0</span> cards</span>
                                    </button>
                                    <div id="exilePreview" class="zone-preview" style="display: none;"></div>
                                </div>

                                <div id="deliriumIndicator2" class="zone-counter btn btn-sm" style="display: none; cursor: default; pointer-events: none; min-height: 44px; font-size: 0.9rem; flex-direction: column; align-items: center; padding: 6px;">
                                    <span style="font-size: 1.1rem;">üåÄ</span>
                                    <span style="font-weight: 600;">Delirium</span>
                                    <span id="deliriumStatus2" style="font-size: 0.85rem;"><span id="deliriumTypes2">0</span>/4 types</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Original Single-Player Layout -->
                <div class="single-player-layout" style="display: none;">

                <!-- Opponent Section -->
                <div id="opponentSection" class="card mb-4">
                    <div class="card-header">
                        <h2 class="card-title">üë§ Opponent</h2>
                        <div class="card-subtitle">
                            Life: <span id="opponentLife">20</span> ‚Ä¢
                            Hand: <span id="opponentHandCount">0</span> cards
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Opponent Battlefield -->
                        <div class="mb-3">
                            <h4 class="text-sm font-weight-bold mb-2">‚öîÔ∏è Opponent's Battlefield</h4>
                            <div class="battlefield-zones">
                                <div class="mb-2">
                                    <span class="text-xs">üèîÔ∏è Lands:</span>
                                    <div id="opponentBattlefieldLands" class="d-flex gap-1 flex-wrap" style="min-height: 40px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                        <!-- Opponent lands will appear here -->
                                    </div>
                                </div>
                                <div class="mb-2">
                                    <span class="text-xs">‚öîÔ∏è Creatures:</span>
                                    <div id="opponentBattlefieldCreatures" class="d-flex gap-1 flex-wrap" style="min-height: 40px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                        <!-- Opponent creatures will appear here -->
                                    </div>
                                </div>
                                <div class="mb-2">
                                    <span class="text-xs">‚ú® Others:</span>
                                    <div id="opponentBattlefieldOthers" class="d-flex gap-1 flex-wrap" style="min-height: 40px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                        <!-- Opponent other permanents will appear here -->
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Opponent Zones -->
                        <div class="d-flex gap-2">
                            <span class="badge">ü™¶ Graveyard: <span id="opponentGraveyardCount">0</span></span>
                            <span class="badge">üö´ Exile: <span id="opponentExileCount">0</span></span>
                        </div>
                    </div>
                </div>

                <!-- Current Hand -->
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="card-title">Your Hand</h2>
                            <div class="card-subtitle">
                                <span id="handCount">0 cards</span> ‚Ä¢
                                <span id="mulliganCount">0 mulligans</span>
                            </div>
                        </div>
                        <div class="d-flex gap-2">
                            <div class="dropdown">
                                <button id="sortHandButton" class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    üîÑ Sort: Hands First
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="#" data-sort-mode="hands-first">üÉè Hands First (default)</a></li>
                                    <li><a class="dropdown-item" href="#" data-sort-mode="lands-first">üåç Lands First</a></li>
                                    <li><a class="dropdown-item" href="#" data-sort-mode="cmc">üíé By Mana Cost (CMC)</a></li>
                                    <li><a class="dropdown-item" href="#" data-sort-mode="type">üìã By Card Type</a></li>
                                    <li><a class="dropdown-item" href="#" data-sort-mode="name">üî§ By Name</a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="handContainer">
                            <!-- Hand cards will be inserted here -->
                        </div>
                    </div>
                </div>

                <!-- Game Areas Grid -->
                <div class="card-grid mb-4" style="grid-template-columns: 1fr 1fr;">
                    <!-- Battlefield -->
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">‚öîÔ∏è Battlefield</h3>
                            <div class="card-subtitle">
                                Permanents in play
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h4 class="text-sm font-weight-bold mb-2">üèîÔ∏è Lands</h4>
                                <div id="battlefieldLands" class="d-flex gap-2 flex-wrap" style="min-height: 60px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                    <!-- Battlefield lands will appear here -->
                                </div>
                            </div>
                            <div class="mb-3">
                                <h4 class="text-sm font-weight-bold mb-2">‚öîÔ∏è Creatures</h4>
                                <div id="battlefieldCreatures" class="d-flex gap-2 flex-wrap" style="min-height: 60px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                    <!-- Battlefield creatures will appear here -->
                                </div>
                            </div>
                            <div>
                                <h4 class="text-sm font-weight-bold mb-2">‚ú® Other Permanents</h4>
                                <div id="battlefieldOthers" class="d-flex gap-2 flex-wrap" style="min-height: 60px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                    <!-- Other permanents will appear here -->
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Zones -->
                    <div class="card">
                        <div class="card-header">
                            <div class="d-flex gap-2 mb-2">
                                <button class="btn btn-sm zone-tab active" data-zone="graveyard">
                                    ü™¶ Graveyard (<span id="graveyardCount">0</span>)
                                </button>
                                <button class="btn btn-sm zone-tab" data-zone="exile">
                                    üö´ Exile (<span id="exileCount">0</span>)
                                </button>
                            </div>
                            <div class="d-flex gap-2">
                                <button class="btn btn-xs btn-secondary" onclick="window.handSimulator?.addTestCardToGraveyard()" title="Add test card to graveyard">
                                    +Test GY
                                </button>
                                <button class="btn btn-xs btn-secondary" onclick="window.handSimulator?.addTestCardToExile()" title="Add test card to exile">
                                    +Test Exile
                                </button>
                                <button class="btn btn-xs btn-success" onclick="window.handSimulator?.addTestCreatureWithCounters()" title="Add test creature with counters">
                                    +Test Creature
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            <div id="graveyardZone" class="zone-content" style="min-height: 200px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                <!-- Graveyard cards will appear here -->
                            </div>
                            <div id="exileZone" class="zone-content" style="display: none; min-height: 200px; padding: var(--space-2); background-color: var(--bg-tertiary); border-radius: var(--border-radius);">
                                <!-- Exile cards will appear here -->
                            </div>
                        </div>
                    </div>
                </div>
                </div> <!-- End single-player-layout -->

            </div>
        </main>
    </div>

    <!-- Mobile Navigation -->
    <div class="mobile-overlay" onclick="document.body.classList.remove('mobile-sidebar-open')"></div>
    <nav class="mobile-nav-bottom">
        <div class="mobile-nav-tabs">
            <a href="/decks-modern" class="mobile-nav-tab">
                <span class="mobile-nav-icon">üÉè</span>
                <span>Decks</span>
            </a>
            <a href="/playhand-modern" class="mobile-nav-tab active">
                <span class="mobile-nav-icon">üéÆ</span>
                <span>Play</span>
            </a>
            <a href="/handsimulation" class="mobile-nav-tab">
                <span class="mobile-nav-icon">üé≤</span>
                <span>Simulate</span>
            </a>
            <a href="/alldecks" class="mobile-nav-tab">
                <span class="mobile-nav-icon">üìö</span>
                <span>Library</span>
            </a>
            <a href="/create-deck-form" class="mobile-nav-tab">
                <span class="mobile-nav-icon">‚ûï</span>
                <span>Create</span>
            </a>
        </div>
    </nav>

    <!-- Deck Selection Modal -->
    <div id="deckSelectionModal" class="modal" style="display: none;" onclick="if(event.target.id === 'deckSelectionModal') this.style.display='none'">
        <div class="modal-content" style="max-width: 900px; max-height: 90vh; display: flex; flex-direction: column; background: var(--bg-secondary); color: var(--text-primary);" onclick="event.stopPropagation()">
            <div class="modal-header" style="background: var(--bg-secondary); color: var(--text-primary);">
                <h3 style="color: var(--text-primary);">üé¥ Select Decks</h3>
                <button onclick="document.getElementById('deckSelectionModal').style.display='none'" class="btn btn-secondary btn-sm">‚úï</button>
            </div>
            <div class="modal-body" style="padding: var(--space-4); overflow-y: auto; flex: 1; background: var(--bg-secondary); color: var(--text-primary);">

                <!-- Player Deck Selection -->
                <div style="margin-bottom: var(--space-6); padding: var(--space-4); border: 2px solid #0d6efd; border-radius: 8px; background: rgba(13, 110, 253, 0.05);">
                    <h4 style="color: #0d6efd; margin-bottom: var(--space-3);">üßô‚Äç‚ôÇÔ∏è Player 1 Deck</h4>
                    <div class="d-flex gap-2 flex-wrap" style="margin-bottom: var(--space-2);">
                        <select id="deckSelectModal" class="form-select" style="flex: 1; min-width: 200px; padding: 8px 12px;">
                            <option value="">Select a deck...</option>
                            <optgroup label="Featured Decks">
                                <option value="./xml/BigRedMachine.xml">Big Red Machine</option>
                                <option value="./xml/Stasis.xml">Stasis</option>
                                <option value="./decks/classic/affinity.xml">Affinity</option>
                                <option value="./decks/classic/goblins.xml">Goblins</option>
                            </optgroup>
                            <optgroup label="Legacy Decks">
                                <option value="./xml/legacy/Elves.xml">Elves</option>
                                <option value="./xml/legacy/Red-Delver.xml">Red Delver</option>
                                <option value="./decks/classic/hightide.xml">High Tide</option>
                                <option value="./decks/classic/belcher.xml">Belcher</option>
                                <option value="./decks/classic/dredge.xml">Dredge</option>
                                <option value="./decks/classic/landstill.xml">Landstill</option>
                            </optgroup>
                            <optgroup label="Limited Decks">
                                <option value="./xml/Brothers_War/Limited-BrothersWar.xml">Brothers War Limited</option>
                                <option value="./xml/crimson_vow/Limited-Red.xml">Crimson Vow - Red</option>
                                <option value="./xml/crimson_vow/Limited-RedGreen.xml">Crimson Vow - RG</option>
                                <option value="./xml/crimson_vow/Limited-GreenBlack.xml">Crimson Vow - GB</option>
                                <option value="./xml/crimson_vow/Limited-WhiteSplash.xml">Crimson Vow - White</option>
                                <option value="./xml/crimson_vow/Limited-GreenBlue.xml">Crimson Vow - UG</option>
                                <option value="./xml/crimson_vow/Limited-GreenWhite.xml">Crimson Vow - GW</option>
                            </optgroup>
                            <optgroup label="Casual Decks">
                                <option value="./xml/MulchandLoam.xml">Mulch and Loam</option>
                                <option value="./xml/BlackRack.xml">Black Rack</option>
                                <option value="./xml/BlackDread.xml">Black Dread</option>
                                <option value="./xml/BloodBraidElf.xml">Bloodbraid Elf</option>
                                <option value="./xml/BloodBraidElf-Optimized.xml">‚≠ê Bloodbraid Elf - Optimized</option>
                                <option value="./xml/BloodBraidEnchantress.xml">Bloodbraid Enchantress</option>
                                <option value="./xml/Brood.xml">Brood</option>
                                <option value="./xml/CharredDiscard.xml">Charred Discard</option>
                                <option value="./xml/Classic.xml">Classic</option>
                                <option value="./xml/Dimir_Inverter.xml">Dimir Inverter</option>
                                <option value="./xml/FireandIce.xml">Fire and Ice</option>
                                <option value="./xml/GreenWaste.xml">Green Waste</option>
                                <option value="./xml/GreenWasteOrder.xml">Green Waste Order</option>
                                <option value="./xml/GreenWasteTomorrow.xml">Green Waste Tomorrow</option>
                                <option value="./xml/GreenWasteSakura.xml">Green Waste Sakura</option>
                                <option value="./xml/WelderGamble.xml">Welder Gamble</option>
                                <option value="./xml/CloudpostWelder.xml">Cloudpost Welder</option>
                                <option value="./xml/JunkDiver.xml">Junk Diver</option>
                                <option value="./xml/JeskaiPioneer.xml">Jeskai Pioneer</option>
                                <option value="./xml/KindofBlue.xml">Kind of Blue</option>
                                <option value="./xml/IxalanCannons.xml">Ixalan Cannons</option>
                                <option value="./xml/Ixalan_BlackRedBlue.xml">Ixalan BRU</option>
                                <option value="./xml/Ixalan_Cannons_RedBlue.xml">Ixalan Cannons RU</option>
                                <option value="./xml/Ixalan_Green_White.xml">Ixalan GW</option>
                                <option value="./xml/Lumberjack.xml">Lumberjack</option>
                                <option value="./xml/MantisRiderPioneer.xml">Mantis Rider Pioneer</option>
                                <option value="./xml/Napoleon.xml">Napoleon</option>
                                <option value="./xml/Nishoba.xml">Nishoba</option>
                                <option value="./xml/Outpost.xml">Outpost</option>
                                <option value="./xml/PatriotBlock.xml">Patriot Block</option>
                                <option value="./xml/Patriot.xml">Patriot</option>
                                <option value="./xml/Pernicious.xml">Pernicious</option>
                                <option value="./xml/Plum.xml">Plum</option>
                                <option value="./xml/PlumGoneBlock.xml">Plum Gone Block</option>
                                <option value="./xml/RayneForest.xml">Rayne Forest</option>
                                <option value="./xml/RedPatrol.xml">Red Patrol</option>
                                <option value="./xml/Rith.xml">Rith</option>
                                <option value="./xml/TronTate.xml">Tron Tate</option>
                                <option value="./xml/Welder.xml">Welder</option>
                                <option value="./xml/ZombieRenewal.xml">Zombie Renewal</option>
                                <option value="./decks/classic/oath.xml">Oath</option>
                                <option value="./decks/classic/trix.xml">Trix</option>
                                <option value="./decks/classic/counterbalance.xml">Counterbalance</option>
                            </optgroup>
                        </select>
                        <button class="btn btn-primary btn-sm" onclick="const sel = document.getElementById('deckSelectModal'); if(sel.value) window.handSimulator?.loadDeck(sel.value)">Load Deck</button>
                        <button class="btn btn-secondary btn-sm" onclick="document.getElementById('xmlFile').click()">üìÅ Upload XML</button>
                    </div>
                    <div class="d-flex gap-2" style="margin-top: var(--space-2);">
                        <button id="setPlayer1DefaultBtnModal" class="btn btn-info btn-sm" onclick="window.handSimulator.setPlayer1DeckAsDefault()" title="Set as default Player 1 deck" disabled>
                            ‚≠ê Set Default
                        </button>
                        <button id="clearPlayer1DefaultBtnModal" class="btn btn-secondary btn-sm" onclick="window.handSimulator.clearDefaultPlayer1Deck()" title="Clear default Player 1 deck" disabled>
                            ‚úï Clear Default
                        </button>
                    </div>
                    <div class="text-sm" style="color: var(--text-secondary); margin-top: var(--space-2);">
                        Current: <span id="playerDeckNameModal">No Deck</span>
                    </div>
                </div>

                <!-- Player 2 Deck Selection -->
                <div style="margin-bottom: var(--space-4); padding: var(--space-4); border: 2px solid #d63384; border-radius: 8px; background: rgba(214, 51, 132, 0.05);">
                    <h4 style="color: #d63384; margin-bottom: var(--space-3);">üë§ Player 2 Deck</h4>
                    <div class="d-flex gap-2 flex-wrap" style="margin-bottom: var(--space-2);">
                        <select id="opponentDeckSelectModal" class="form-select" style="flex: 1; min-width: 200px; padding: 8px 12px;">
                            <option value="">Select Player 2 deck...</option>
                            <optgroup label="Featured Decks">
                                <option value="./xml/BigRedMachine.xml">Big Red Machine</option>
                                <option value="./xml/Stasis.xml">Stasis</option>
                                <option value="./decks/classic/affinity.xml">Affinity</option>
                                <option value="./decks/classic/goblins.xml">Goblins</option>
                            </optgroup>
                            <optgroup label="Legacy Decks">
                                <option value="./xml/legacy/Elves.xml">Elves</option>
                                <option value="./xml/legacy/Red-Delver.xml">Red Delver</option>
                                <option value="./decks/classic/hightide.xml">High Tide</option>
                                <option value="./decks/classic/belcher.xml">Belcher</option>
                                <option value="./decks/classic/dredge.xml">Dredge</option>
                                <option value="./decks/classic/landstill.xml">Landstill</option>
                            </optgroup>
                            <optgroup label="Limited Decks">
                                <option value="./xml/Brothers_War/Limited-BrothersWar.xml">Brothers War Limited</option>
                                <option value="./xml/crimson_vow/Limited-Red.xml">Crimson Vow - Red</option>
                                <option value="./xml/crimson_vow/Limited-RedGreen.xml">Crimson Vow - RG</option>
                                <option value="./xml/crimson_vow/Limited-GreenBlack.xml">Crimson Vow - GB</option>
                                <option value="./xml/crimson_vow/Limited-WhiteSplash.xml">Crimson Vow - White</option>
                                <option value="./xml/crimson_vow/Limited-GreenBlue.xml">Crimson Vow - UG</option>
                                <option value="./xml/crimson_vow/Limited-GreenWhite.xml">Crimson Vow - GW</option>
                            </optgroup>
                            <optgroup label="Casual Decks">
                                <option value="./xml/MulchandLoam.xml">Mulch and Loam</option>
                                <option value="./xml/BlackRack.xml">Black Rack</option>
                                <option value="./xml/BlackDread.xml">Black Dread</option>
                                <option value="./xml/BloodBraidElf.xml">Bloodbraid Elf</option>
                                <option value="./xml/BloodBraidElf-Optimized.xml">‚≠ê Bloodbraid Elf - Optimized</option>
                                <option value="./xml/BloodBraidEnchantress.xml">Bloodbraid Enchantress</option>
                                <option value="./xml/Brood.xml">Brood</option>
                                <option value="./xml/CharredDiscard.xml">Charred Discard</option>
                                <option value="./xml/Classic.xml">Classic</option>
                                <option value="./xml/Dimir_Inverter.xml">Dimir Inverter</option>
                                <option value="./xml/FireandIce.xml">Fire and Ice</option>
                                <option value="./xml/GreenWaste.xml">Green Waste</option>
                                <option value="./xml/GreenWasteOrder.xml">Green Waste Order</option>
                                <option value="./xml/GreenWasteTomorrow.xml">Green Waste Tomorrow</option>
                                <option value="./xml/GreenWasteSakura.xml">Green Waste Sakura</option>
                                <option value="./xml/WelderGamble.xml">Welder Gamble</option>
                                <option value="./xml/CloudpostWelder.xml">Cloudpost Welder</option>
                                <option value="./xml/JunkDiver.xml">Junk Diver</option>
                                <option value="./xml/JeskaiPioneer.xml">Jeskai Pioneer</option>
                                <option value="./xml/KindofBlue.xml">Kind of Blue</option>
                                <option value="./xml/IxalanCannons.xml">Ixalan Cannons</option>
                                <option value="./xml/Ixalan_BlackRedBlue.xml">Ixalan BRU</option>
                                <option value="./xml/Ixalan_Cannons_RedBlue.xml">Ixalan Cannons RU</option>
                                <option value="./xml/Ixalan_Green_White.xml">Ixalan GW</option>
                                <option value="./xml/Lumberjack.xml">Lumberjack</option>
                                <option value="./xml/MantisRiderPioneer.xml">Mantis Rider Pioneer</option>
                                <option value="./xml/Napoleon.xml">Napoleon</option>
                                <option value="./xml/Nishoba.xml">Nishoba</option>
                                <option value="./xml/Outpost.xml">Outpost</option>
                                <option value="./xml/PatriotBlock.xml">Patriot Block</option>
                                <option value="./xml/Patriot.xml">Patriot</option>
                                <option value="./xml/Pernicious.xml">Pernicious</option>
                                <option value="./xml/Plum.xml">Plum</option>
                                <option value="./xml/PlumGoneBlock.xml">Plum Gone Block</option>
                                <option value="./xml/RayneForest.xml">Rayne Forest</option>
                                <option value="./xml/RedPatrol.xml">Red Patrol</option>
                                <option value="./xml/Rith.xml">Rith</option>
                                <option value="./xml/TronTate.xml">Tron Tate</option>
                                <option value="./xml/Welder.xml">Welder</option>
                                <option value="./xml/ZombieRenewal.xml">Zombie Renewal</option>
                                <option value="./decks/classic/oath.xml">Oath</option>
                                <option value="./decks/classic/trix.xml">Trix</option>
                                <option value="./decks/classic/counterbalance.xml">Counterbalance</option>
                            </optgroup>
                        </select>
                        <button class="btn btn-primary btn-sm" onclick="const sel = document.getElementById('opponentDeckSelectModal'); if(sel.value) window.handSimulator?.loadOpponentDeck(sel.value)">Load Deck</button>
                    </div>
                    <div class="d-flex gap-2" style="margin-top: var(--space-2);">
                        <button id="setOpponentDefaultBtnModal" class="btn btn-info btn-sm" onclick="window.handSimulator.setOpponentDeckAsDefault()" title="Set as default opponent deck" disabled>
                            ‚≠ê Set Default
                        </button>
                        <button id="clearOpponentDefaultBtnModal" class="btn btn-secondary btn-sm" onclick="window.handSimulator.clearDefaultOpponentDeck()" title="Clear default opponent deck" disabled>
                            ‚úï Clear Default
                        </button>
                    </div>
                    <div class="text-sm" style="color: var(--text-secondary); margin-top: var(--space-2);">
                        Current: <span id="opponentDeckNameModal">No Deck</span>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- Library Modal -->
    <div id="libraryModal" class="modal" style="display: none;">
        <div class="modal-content" style="max-width: 95vw; width: 1400px; max-height: 95vh; display: flex; flex-direction: column;">
            <div class="modal-header" style="flex-shrink: 0;">
                <h3>üìö Library Contents (<span id="libraryCountDisplay">0</span> cards)</h3>
                <button id="closeLibraryModal" class="btn btn-secondary btn-sm">‚úï</button>
            </div>
            <div class="modal-body" style="padding: var(--space-2); flex: 1; overflow: hidden;">
                <div id="libraryContents" class="zone-container" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); gap: var(--space-2); height: 100%; overflow-y: auto; padding: var(--space-1);">
                    <!-- Library cards will appear here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Floating Action Button -->
    <button id="fabButton" class="fab" title="Quick Actions">
        ‚ö°
    </button>

    <!-- Card Preview Modal -->
    <div id="cardPreviewModal" class="modal" style="display: none;">
        <div class="modal-content" style="max-width: 400px;">
            <div class="modal-header">
                <h3 id="previewCardName">Card Preview</h3>
                <button id="closeCardPreview" class="btn btn-secondary btn-sm">‚úï</button>
            </div>
            <div class="modal-body" style="text-align: center;">
                <img id="previewCardImage" src="" alt="Card Preview" style="max-width: 100%; border-radius: var(--border-radius);">
                <div id="previewCardInfo" style="margin-top: var(--space-4); text-align: left;">
                    <!-- Card details will be populated here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Graveyard Modal -->
    <div id="graveyardModal" class="modal" style="display: none;">
        <div class="modal-content" style="max-width: 600px;">
            <div class="modal-header">
                <h3>ü™¶ Graveyard</h3>
                <button id="closeGraveyardModal" class="btn btn-secondary btn-sm">‚úï</button>
            </div>
            <div class="modal-body">
                <div id="graveyardModalContents" class="d-flex flex-wrap gap-2" style="max-height: 400px; overflow-y: auto;">
                    <!-- Graveyard cards will appear here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Exile Modal -->
    <div id="exileModal" class="modal" style="display: none;">
        <div class="modal-content" style="max-width: 600px;">
            <div class="modal-header">
                <h3>üö´ Exile</h3>
                <button id="closeExileModal" class="btn btn-secondary btn-sm">‚úï</button>
            </div>
            <div class="modal-body">
                <div id="exileModalContents" class="d-flex flex-wrap gap-2" style="max-height: 400px; overflow-y: auto;">
                    <!-- Exile cards will appear here -->
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Card Zoom Overlay -->
    <div id="cardZoomOverlay" class="card-zoom-overlay">
        <div class="card-zoom-container">
            <img id="cardZoomImage" class="card-zoom-image" src="" alt="Card Preview">
            <button id="cardZoomClose" class="card-zoom-close" aria-label="Close card preview">‚úï</button>
        </div>
    </div>

    <!-- Toast Notifications -->
    <div id="toastContainer" class="toast-container"></div>

    <style>
        /* Dropdown Menu Styles */
        .dropdown-menu {
            display: none;
        }
        .dropdown-menu.show {
            display: block;
            animation: fadeIn 0.15s ease-in;
        }

        /* Advanced Actions Panel */
        .advanced-actions-panel {
            display: none;
        }
        .advanced-actions-panel.show {
            display: block;
            animation: fadeIn 0.15s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-4px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>

    <script>
        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.dropdown')) {
                document.querySelectorAll('.dropdown-menu.show').forEach(menu => {
                    menu.classList.remove('show');
                });
            }
            if (!event.target.closest('#boardWipesToggleBtn') && !event.target.closest('#boardWipesPanel')) {
                const panel = document.getElementById('boardWipesPanel');
                if (panel) panel.classList.remove('show');
            }

            // Close advanced actions panels when clicking outside
            const playerPanel = document.getElementById('playerAdvancedActions');
            const opponentPanel = document.getElementById('opponentAdvancedActions');
            const libraryMenu = document.getElementById('libraryActionsMenu');
            const opponentLibraryMenu = document.getElementById('opponentLibraryActionsMenu');
            const topLibraryMenu = document.getElementById('topLibraryActionsMenu');
            const topOpponentLibraryMenu = document.getElementById('topOpponentLibraryActionsMenu');
            const playerMoreActions = document.getElementById('playerMoreActions');
            const playerTokenMenu = document.getElementById('playerTokenMenu');
            const opponentMoreActions = document.getElementById('opponentMoreActions');
            const opponentTokenMenu = document.getElementById('opponentTokenMenu');

            if (!event.target.closest('#playerAdvancedActions') &&
                !event.target.matches('[onclick*="playerAdvancedActions"]') &&
                playerPanel && playerPanel.classList.contains('show')) {
                playerPanel.classList.remove('show');
            }
            if (!event.target.closest('#opponentAdvancedActions') &&
                !event.target.matches('[onclick*="opponentAdvancedActions"]') &&
                opponentPanel && opponentPanel.classList.contains('show')) {
                opponentPanel.classList.remove('show');
            }
            if (!event.target.closest('#libraryActionsMenu') &&
                !event.target.matches('[oncontextmenu*="libraryActionsMenu"]') &&
                libraryMenu && libraryMenu.style.display === 'block') {
                libraryMenu.style.display = 'none';
            }
            if (!event.target.closest('#opponentLibraryActionsMenu') &&
                !event.target.matches('[oncontextmenu*="opponentLibraryActionsMenu"]') &&
                opponentLibraryMenu && opponentLibraryMenu.classList.contains('show')) {
                opponentLibraryMenu.classList.remove('show');
            }
            if (!event.target.closest('#playerMoreActions') &&
                !event.target.matches('[onclick*="playerMoreActions"]') &&
                playerMoreActions && playerMoreActions.classList.contains('show')) {
                playerMoreActions.classList.remove('show');
            }
            if (!event.target.closest('#playerTokenMenu') &&
                !event.target.matches('[onclick*="playerTokenMenu"]') &&
                playerTokenMenu && playerTokenMenu.classList.contains('show')) {
                playerTokenMenu.classList.remove('show');
            }
            if (!event.target.closest('#opponentMoreActions') &&
                !event.target.matches('[onclick*="opponentMoreActions"]') &&
                opponentMoreActions && opponentMoreActions.classList.contains('show')) {
                opponentMoreActions.classList.remove('show');
            }
            if (!event.target.closest('#opponentTokenMenu') &&
                !event.target.matches('[onclick*="opponentTokenMenu"]') &&
                opponentTokenMenu && opponentTokenMenu.classList.contains('show')) {
                opponentTokenMenu.classList.remove('show');
            }
            if (!event.target.closest('#topLibraryActionsMenu') &&
                !event.target.matches('[onclick*="topLibraryActionsMenu"]') &&
                topLibraryMenu && topLibraryMenu.classList.contains('show')) {
                topLibraryMenu.classList.remove('show');
            }
            if (!event.target.closest('#topOpponentLibraryActionsMenu') &&
                !event.target.matches('[onclick*="topOpponentLibraryActionsMenu"]') &&
                topOpponentLibraryMenu && topOpponentLibraryMenu.classList.contains('show')) {
                topOpponentLibraryMenu.classList.remove('show');
            }
        });
    </script>
</body>
</html>